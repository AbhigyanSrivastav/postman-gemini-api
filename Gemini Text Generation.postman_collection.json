{
	"info": {
		"_postman_id": "1c556d3c-eed7-442a-9f0b-856f14e3ac9e",
		"name": "Gemini Text Generation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42938289"
	},
	"item": [
		{
			"name": "Text Generation",
			"item": [
				{
					"name": "Text-From-Text",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"contents\": [\r\n        {\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Write a story about a magic backpack.\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Multimodal-Text-Generation",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"contents\": [\r\n    {\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"Tell me about this instrument\"\r\n        },\r\n        {\r\n          \"inline_data\": {\r\n            \"mime_type\": \"image/jpeg\",\r\n            \"data\": \"{{YOUR-BASE64-ENCODED-IMAGE-HERE}}\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}\n"
								},
								{
									"key": "",
									"value": null,
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Interactive-Chat",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"contents\": [\r\n    {\r\n      \"role\": \"user\",\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"Hello\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"role\": \"model\",\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"Great to meet you. What would you like to know?\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"role\": \"user\",\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"I have two dogs in my house. How many paws are in my house?\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Interactive-Chat-With-Streaming",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"contents\": [\r\n    {\r\n      \"role\": \"user\",\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"Hello\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"role\": \"model\",\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"Great to meet you. What would you like to know?\"\r\n        }\r\n      ]\r\n    },\r\n    {\r\n      \"role\": \"user\",\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"I have two dogs in my house. How many paws are in my house?\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "System-Instruction",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"system_instruction\": {\r\n    \"parts\": [\r\n      {\r\n        \"text\": \"You are a cat. Your name is Neko.\"\r\n      }\r\n    ]\r\n  },\r\n  \"contents\": [\r\n    {\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"Hello there\"\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}\n"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "The simplest way to generate text using the Gemini API is to provide the model with a single text-only input."
		},
		{
			"name": "Vision",
			"item": [
				{
					"name": "Image Upload & Content Generation",
					"item": [
						{
							"name": "Get-Upload-Url",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript",
										"packages": {}
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Goog-Upload-Protocol",
										"value": "resumable",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Command",
										"value": "start",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Header-Content-Length",
										"value": "\t830389",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Header-Content-Type",
										"value": "image/jpeg",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": {\r\n        \"display_name\": \"my_image\"\r\n    }\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{FILE_UPLOAD_BASE_URL}}?key={{API_KEY}}",
									"host": [
										"{{FILE_UPLOAD_BASE_URL}}"
									],
									"query": [
										{
											"key": "key",
											"value": "{{API_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload-Image",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Length",
										"value": "{{SIZE_OF_YOUR_IMAGE_IN_BYTES}}",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Offset",
										"value": "0",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Command",
										"value": "upload, finalize",
										"type": "text"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "postman-cloud:///1effc0d0-b59e-45b0-8fed-413a7889ae0d"
									}
								},
								"url": {
									"raw": "{{FILE_UPLOAD_BASE_URL}}?key={{API_KEY}}&upload_id={{UPLOAD_ID}}&upload_protocol={{UPLOAD_PROTOCOL}}",
									"host": [
										"{{FILE_UPLOAD_BASE_URL}}"
									],
									"query": [
										{
											"key": "key",
											"value": "{{API_KEY}}"
										},
										{
											"key": "upload_id",
											"value": "{{UPLOAD_ID}}"
										},
										{
											"key": "upload_protocol",
											"value": "{{UPLOAD_PROTOCOL}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate-From-Image",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contents\": [{\r\n    \"parts\": [\r\n      {\"text\": \"Can you describe the image?\"},\r\n      {\"file_data\": {\r\n        \"mime_type\": \"image/jpeg\",\r\n        \"file_uri\": \"{{BASE_URL}}/files/ptihshhwrn2p\"\r\n      }}\r\n    ]\r\n  }]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"models",
										"{{MODEL_NAME}}:{{STREAM_TYPE}}"
									],
									"query": [
										{
											"key": "key",
											"value": "{{API_KEY}}\n"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Single-Image-Input",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"contents\": [\r\n    {\r\n      \"parts\": [\r\n        {\r\n          \"text\": \"Caption this image.\"\r\n        },\r\n        {\r\n          \"inline_data\": {\r\n            \"mime_type\": \"image/jpeg\",\r\n            \"data\": \"{{YOUR_BASE64_ENCODED_IMAGE}}\"\r\n          }\r\n        }\r\n      ]\r\n    }\r\n  ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}\n"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Multiple-Image-Input",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"contents\": [{\r\n    \"parts\": [\r\n      {\r\n        \"inline_data\": {\r\n          \"mime_type\": \"image/jpeg\",\r\n          \"data\": \"{{YOUR_BASE64_ENCODED_IMAGE_1}}\"\r\n        }\r\n      },\r\n      {\r\n        \"inline_data\": {\r\n          \"mime_type\": \"image/png\",\r\n          \"data\": \"{{YOUR_BASE64_ENCODED_IMAGE_2}}\"\r\n        }\r\n      },\r\n      {\r\n        \"text\": \"Generate a list of all the objects contained in both images.\"\r\n      }\r\n    ]\r\n  }]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}\n"
								}
							]
						}
					},
					"response": []
				}
			],
			"description": "Gemini models are able to process images and videos, enabling many frontier developer use cases that would have historically required domain specific models. Some of Gemini's vision capabilities include the ability to:\n\n- Caption and answer questions about images\n    \n- Transcribe and reason over PDFs, including up to 2 million tokens\n    \n- Describe, segment, and extract information from videos up to 90 minutes long\n    \n- Detect objects in an image and return bounding box coordinates for them"
		},
		{
			"name": "Audio",
			"item": [
				{
					"name": "Audio Upload & Content Generation",
					"item": [
						{
							"name": "Get-Upload-Url",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "X-Goog-Upload-Protocol",
										"value": "resumable",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Command",
										"value": "start",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Header-Content-Length",
										"value": "{{NUM_BYTES}}",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Header-Content-Type",
										"value": "{{MIME_TYPE}}",
										"type": "text"
									},
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"file\": {\r\n        \"display_name\": \"AUDIO\"\r\n    }\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{FILE_UPLOAD_BASE_URL}}?key={{API_KEY}}",
									"host": [
										"{{FILE_UPLOAD_BASE_URL}}"
									],
									"query": [
										{
											"key": "key",
											"value": "{{API_KEY}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Upload-Audio",
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Length",
										"value": "{{NUM_BYTES}}",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Offset",
										"value": "0",
										"type": "text"
									},
									{
										"key": "X-Goog-Upload-Command",
										"value": "upload,finalize",
										"type": "text"
									}
								],
								"body": {
									"mode": "file",
									"file": {
										"src": "postman-cloud:///1effc385-7aeb-4410-bb7a-9c4069859a00"
									}
								},
								"url": {
									"raw": "{{FILE_UPLOAD_BASE_URL}}?key={{API_KEY}}&upload_id={{UPLOAD_ID}}&upload_protocol={{UPLOAD_PROTOCOL}}",
									"host": [
										"{{FILE_UPLOAD_BASE_URL}}"
									],
									"query": [
										{
											"key": "key",
											"value": "{{API_KEY}}"
										},
										{
											"key": "upload_id",
											"value": "{{UPLOAD_ID}}"
										},
										{
											"key": "upload_protocol",
											"value": "{{UPLOAD_PROTOCOL}}"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "Generate-From-Audio",
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"contents\": [{\r\n    \"parts\": [\r\n      {\"text\": \"Describe this audio clip\"},\r\n      {\"file_data\": {\r\n        \"mime_type\": \"{{MIME_TYPE}}\",\r\n        \"file_uri\": \"{{BASE_URL}}/files/sx41jb7p8awp\"\r\n      }}\r\n    ]\r\n  }]\r\n}\r\n",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}\n",
									"host": [
										"{{BASE_URL}}"
									],
									"path": [
										"models",
										"{{MODEL_NAME}}:{{STREAM_TYPE}}"
									],
									"query": [
										{
											"key": "key",
											"value": "{{API_KEY}}\n"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Code Execution",
			"item": [
				{
					"name": "Code-Execution",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tools\": [\r\n        {\r\n            \"code_execution\": {}\r\n        }\r\n    ],\r\n    \"contents\": {\r\n        \"parts\": {\r\n            \"text\": \"What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.\"\r\n        }\r\n    }\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Code-Execution-In-Chat",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"tools\": [{\"code_execution\": {}}],\r\n    \"contents\": [\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [{\r\n                \"text\": \"Can you print \\\"Hello world!\\\"?\"\r\n            }]\r\n        },\r\n        {\r\n            \"role\": \"model\",\r\n            \"parts\": [\r\n                {\r\n                    \"text\": \"Sure! Here is the Python code to print 'Hello World!':\"\r\n                },\r\n                {\r\n                    \"executable_code\": {\r\n                        \"language\": \"PYTHON\",\r\n                        \"code\": \"print(\\\"hello world!\\\")\"\r\n                    }\r\n                },\r\n                {\r\n                    \"code_execution_result\": {\r\n                        \"outcome\": \"OUTCOME_OK\",\r\n                        \"output\": \"hello world!\\n\"\r\n                    }\r\n                },\r\n                {\r\n                    \"text\": \"I have printed \\\"hello world!\\\" using the provided Python code block.\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"role\": \"user\",\r\n            \"parts\": [{\r\n                \"text\": \"What is the sum of the first 50 prime numbers? Generate and run code for the calculation, and make sure you get all 50.\"\r\n            }]\r\n        }\r\n    ]\r\n}\r\n",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/models/{{MODEL_NAME}}:{{STREAM_TYPE}}?key={{API_KEY}}",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"models",
								"{{MODEL_NAME}}:{{STREAM_TYPE}}"
							],
							"query": [
								{
									"key": "key",
									"value": "{{API_KEY}}"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	]
}